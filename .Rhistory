R.home("bin")
q()
.Library
q()
#' ---
#' title: "Changes in Popular Majors from 2020 to 2023"
#' output: github_document
#' ---
#'
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/sousekilyu/Documents/GitHub/GaoKaoVer3")
#'
#' ## Data preparation
#'
library(reticulate)
reticulate::repl_python()
reticulate::source_python('~/Documents/GitHub/GaoKaoVer3/main/data_etl.py')
reticulate::repl_python()
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
.hot <- dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
#'
#' ## Data preparation
#'
library(openxlsx)
library(data.table)
library(stringr)
library(magrittr)
library(dplyr)
library(ggplot2)
library(glue)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(dplyr)
library(readxl)
library(stringr)
library(showtext)
library(ggstance)
library(ggbreak)
library(plotly)
library(ggpubr)
library(tidyverse)
library(ggcharts)
library(ggrepel)
font_add("Canger", "/Library/Fonts/仓耳今楷01-W04.ttf")
font_families()
showtext_auto()  # 全局自动使用
hist(dt_rank_cmb$score_by_school_scale)
reticulate::source_python("~/Documents/GitHub/GaoKaoVer3/main/data_etl.py")
source("/Users/sousekilyu/Documents/GitHub/GaoKaoVer2/main/function.r")
hist(dt_rank_cmb$score_by_school_scale)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
.hot <- dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
print(.hot)
#' ---
#' title: "Changes in Popular Majors from 2020 to 2023"
#' output: github_document
#' ---
#'
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/sousekilyu/Documents/GitHub/GaoKaoVer3")
#'
#' ## Data preparation
#'
library(openxlsx)
library(data.table)
library(stringr)
library(magrittr)
library(dplyr)
library(ggplot2)
library(glue)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(dplyr)
library(readxl)
library(stringr)
library(showtext)
library(ggstance)
library(ggbreak)
library(plotly)
library(ggpubr)
library(tidyverse)
library(ggcharts)
library(ggrepel)
font_add("Canger", "/Library/Fonts/仓耳今楷01-W04.ttf")
font_families()
showtext_auto()  # 全局自动使用
#showtext_auto(FALSE) # 不需要就关闭
## source the python
# reticulate::use_python("/Users/sousekilyu/Library/r-miniconda/bin/python")
reticulate::source_python("~/Documents/GitHub/GaoKaoVer3/main/data_etl.py")
source("/Users/sousekilyu/Documents/GitHub/GaoKaoVer2/main/function.r")
#' ---
#' title: "Changes in Popular Majors from 2020 to 2023"
#' output: github_document
#' ---
#'
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/sousekilyu/Documents/GitHub/GaoKaoVer3")
## source the scripts
source("/Users/sousekilyu/Documents/GitHub/GaoKaoVer2/main/function.r")
# reticulate::use_python("/Users/sousekilyu/Library/r-miniconda/bin/python")
reticulate::source_python("~/Documents/GitHub/GaoKaoVer3/main/data_etl.py")
hist(dt_rank_cmb$score_by_school_scale)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
.hot <- dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
print(.hot)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 150)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 100)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 50)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 80)
ggsave(.hot, "Rplot.png", width = 5000, height = 3500, units = "px", dpi = 800)
ggsave(.hot, filename = "Rplot.png", width = 5000, height = 3500, units = "px", dpi = 800)
ggsave(.hot, filename = "plot/Rplot.png", width = 5000, height = 3500, units = "px", dpi = 300)
ggsave(.hot, filename = "plot/Rplot.png", width = 1200, height = 1600, units = "px", dpi = 300)
ggsave(.hot, filename = "plot/Rplot.png", width = 120, height = 160, units = "px", dpi = 300)
ggsave(.hot, filename = "plot/Rplot.png", width = 2400, height = 3200, units = "px", dpi = 300)
showtext_opts(dpi = 300)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 300)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
.hot <- dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
print(.hot)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 300)
showtext_opts(dpi = 150)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 150)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 300)
showtext_opts(dpi = 300)
ggsave(.hot, filename = "plot/Figure 0-0.png", width = 12, height = 16, dpi = 150)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-1.png", width = 12, height = 16, dpi = 150)
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(
avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()
) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(avg_scores) %>%
group_by(year) %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = -30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Unpopular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-2.png", width = 12, height = 16, dpi = 150)
showtext_opts(dpi = 600)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-1.png", width = 12, height = 16, dpi = 300)
#' ---
#' title: "Changes in Popular Majors from 2020 to 2023"
#' output: github_document
#' ---
#'
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/sousekilyu/Documents/GitHub/GaoKaoVer3")
hist(dt_rank_cmb$score_by_school_scale)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10)) +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-1.png", width = 12, height = 16, dpi = 300)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 35),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-1.png", width = 12, height = 16, dpi = 300)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 25),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-1.png", width = 12, height = 16, dpi = 300)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 15),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-1.png", width = 12, height = 16, dpi = 300)
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(
avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()
) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2023)) %>%
arrange(avg_scores) %>%
group_by(year) %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = -30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 15),
legend.position = "none") +
labs(title = paste0("Unpopular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-2.png", width = 12, height = 16, dpi = 150)
ggsave(filename = "plot/Figure 0-2.png", width = 12, height = 16, dpi = 300)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 15),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
## source the scripts
source("/Users/sousekilyu/Documents/GitHub/GaoKaoVer2/main/function.r")
source("/Users/sousekilyu/Documents/GitHub/GaoKaoVer2/main/etl.r")
hist(dt_rank_cmb$score_by_school_scale)
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 15),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
View(dt_rank_cmb)
View(dt2024_rank_cmb)
# Apply the function to each dataset
dt2024_rank_cmb <- perform_operations(dt2024_cmb, dt2024_school, 2024)
dt2023_rank_cmb <- perform_operations(dt2023_cmb, dt2023_school, 2023)
dt2024_cmb <- update_major(dt2024_cmb, majorData)
source("~/Documents/GitHub/GaoKaoVer3/main/etl.R")
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 15),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
#'
#' ## 热门专业变化趋势分析
#' ### 热门专业，冷门专业
dt_rank_cmb_rough %>%
group_by(year, major) %>%
summarise(avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = n()) %>%
ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year)  %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 15),
legend.position = "none") +
labs(title = paste0("Popular Majors in Shandong Province"), x = "Majors", y = "Majors Popularity")
ggsave(filename = "plot/Figure 0-1.png", width = 12, height = 16, dpi = 300)
dt_rank_cmb_rough %>%
group_by(year, major) %>%
dplyr::summarise(
avg_scores = mean(score_by_major_scale, na.rm = TRUE),
countn = dplyr::n()
) %>%
dplyr::ungroup() %>%
filter(countn >= 10, year %in% c(2020, 2024)) %>%
arrange(desc(avg_scores)) %>%
group_by(year) %>%
ggcharts::bar_chart(major, avg_scores, fill = as.factor(year), facet = as.factor(year), top_n = 30) +
theme_bw() +
theme(
text = element_text(family = "Canger", size = 10),
axis.text.x = element_text(
angle = 45,
hjust = 1,
family = "Canger",
size = 10
),
title = element_text(family = "Canger", size = 15),
legend.position = "none"
) +
labs(
title = "Popular Majors in Shandong Province",
x = "Majors",
y = "Majors Popularity"
)
#' to md
#'
knitr::spin("main/main.r",
format = "Rmd"
)
c(rcartocolor::carto_pal(n = n, name = "Bold")[1:n-1], "grey50")
install.pakcages("rcartocolor")
install.packages("rcartocolor")
c(rcartocolor::carto_pal(n = n, name = "Bold")[1:n-1], "grey50")
